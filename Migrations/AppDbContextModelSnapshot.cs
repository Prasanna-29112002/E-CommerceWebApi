// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace E_Commerce.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminId"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Permissions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdminId");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            AdminId = 1,
                            Email = "Prasanna123@Admin.com",
                            Name = "Prasanna",
                            Password = "Prasanna123",
                            Permissions = "All",
                            Role = "Admin"
                        },
                        new
                        {
                            AdminId = 2,
                            Email = "Harsha123@Admin.com",
                            Name = "Harsha",
                            Password = "Harsha123",
                            Permissions = "All",
                            Role = "Admin"
                        },
                        new
                        {
                            AdminId = 3,
                            Email = "Vidya123@Admin.com",
                            Name = "Vidya",
                            Password = "Vidya123",
                            Permissions = "All",
                            Role = "Admin"
                        },
                        new
                        {
                            AdminId = 4,
                            Email = "Chandu123@Admin.com",
                            Name = "Chandu",
                            Password = "Chandu123",
                            Permissions = "All",
                            Role = "Admin"
                        });
                });

            modelBuilder.Entity("Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Name = "Woman"
                        },
                        new
                        {
                            CategoryId = 2,
                            Name = "Men"
                        },
                        new
                        {
                            CategoryId = 3,
                            Name = "Kids"
                        },
                        new
                        {
                            CategoryId = 4,
                            Name = "Beauty"
                        });
                });

            modelBuilder.Entity("MyOrder", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<string>("OrderStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShippingAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.ToTable("MyOrders");
                });

            modelBuilder.Entity("Payment", b =>
                {
                    b.Property<int>("paymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("paymentId"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("CartItemId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("paymentType")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("paymentId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Category = "Woman",
                            Description = "High Waist Skinny ",
                            ImageURL = "2648264816",
                            Price = 999.0,
                            ProductName = "Jeans"
                        },
                        new
                        {
                            ProductId = 2,
                            Category = "Woman",
                            Description = "Pure Cotton",
                            ImageURL = "2648264816",
                            Price = 399.0,
                            ProductName = "Tops"
                        },
                        new
                        {
                            ProductId = 3,
                            Category = "Men",
                            Description = "Mean's Casual",
                            ImageURL = "2648264816",
                            Price = 899.0,
                            ProductName = "Shirt"
                        },
                        new
                        {
                            ProductId = 4,
                            Category = "Men",
                            Description = "Blue slim Fit",
                            ImageURL = "2648264816",
                            Price = 1365.0,
                            ProductName = "Trouserds"
                        },
                        new
                        {
                            ProductId = 5,
                            Category = "Kids",
                            Description = "Pure Cotton ",
                            ImageURL = "2648264812",
                            Price = 999.0,
                            ProductName = "Jumpsuits"
                        },
                        new
                        {
                            ProductId = 6,
                            Category = "Kids",
                            Description = "Pure Cotton",
                            ImageURL = "2644364816",
                            Price = 599.0,
                            ProductName = "Flared Dresses"
                        },
                        new
                        {
                            ProductId = 7,
                            Category = "Beauty",
                            Description = "SPF 50++++",
                            ImageURL = "2648264566",
                            Price = 899.0,
                            ProductName = "Sunscreen"
                        },
                        new
                        {
                            ProductId = 8,
                            Category = "Buauty",
                            Description = "Niacinamide Face with Zinc",
                            ImageURL = "2648265816",
                            Price = 453.0,
                            ProductName = "Serum"
                        });
                });

            modelBuilder.Entity("ShoppingCart", b =>
                {
                    b.Property<int>("CartItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CartItemId"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CartItemId");

                    b.ToTable("ShoppingCarts");
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShippingAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "Teja@User.com",
                            Name = "Teja",
                            Password = "user123",
                            PaymentDetails = "pending",
                            Phone = "2648264816",
                            Role = "User",
                            ShippingAddress = "Hyderabad"
                        },
                        new
                        {
                            UserId = 2,
                            Email = "Sowmya@User.com",
                            Name = "Sowmya",
                            Password = "user123",
                            PaymentDetails = "pending",
                            Phone = " 5262627771",
                            Role = "User",
                            ShippingAddress = "Banglore"
                        },
                        new
                        {
                            UserId = 3,
                            Email = "Harshitha@User.com",
                            Name = "Harshitha",
                            Password = "user123",
                            PaymentDetails = "Loading",
                            Phone = "42548648246",
                            Role = "User",
                            ShippingAddress = "Chennai"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
